{"ast":null,"code":"import _regeneratorRuntime from \"/root/reactjs-gostack4-module4/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(getPlaylistDetails);\nimport { call, put } from 'redux-saga/effects';\nimport api from '../../services/api';\nimport { Creators as PlaylistDetailsActions } from '../ducks/playlistDetails';\nimport { Creators as ErrorActions } from '../ducks/error';\nexport function getPlaylistDetails(action) {\n  var response;\n  return _regeneratorRuntime().wrap(function getPlaylistDetails$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 3;\n        return call(api.get, \"/playlists/\".concat(action.payload.id, \"?_embed=songs\"));\n      case 3:\n        response = _context.sent;\n        _context.next = 6;\n        return put(PlaylistDetailsActions.getPlaylistDetailsSuccess(response.data));\n      case 6:\n        _context.next = 12;\n        break;\n      case 8:\n        _context.prev = 8;\n        _context.t0 = _context[\"catch\"](0);\n        _context.next = 12;\n        return put(ErrorActions.setError('Não foi possível obter os detalhes da playlist'));\n      case 12:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"names":["getPlaylistDetails","call","put","api","Creators","PlaylistDetailsActions","ErrorActions","action","response","_regeneratorRuntime","wrap","getPlaylistDetails$","_context","prev","next","get","concat","payload","id","sent","getPlaylistDetailsSuccess","data","t0","setError","stop","_marked"],"sources":["/root/reactjs-gostack4-module4/src/store/sagas/playlistDetails.js"],"sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport api from '../../services/api';\n\nimport { Creators as PlaylistDetailsActions } from '../ducks/playlistDetails';\nimport { Creators as ErrorActions } from '../ducks/error';\n\nexport function* getPlaylistDetails(action) {\n  try {\n    const response = yield call(api.get, `/playlists/${action.payload.id}?_embed=songs`);\n\n    yield put(PlaylistDetailsActions.getPlaylistDetailsSuccess(response.data));\n  } catch (err) {\n    yield put(ErrorActions.setError('Não foi possível obter os detalhes da playlist'));\n  }\n}\n"],"mappings":";sDAMiBA,kBAAkB;AANnC,SAASC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC9C,OAAOC,GAAG,MAAM,oBAAoB;AAEpC,SAASC,QAAQ,IAAIC,sBAAsB,QAAQ,0BAA0B;AAC7E,SAASD,QAAQ,IAAIE,YAAY,QAAQ,gBAAgB;AAEzD,OAAO,SAAUN,kBAAkBA,CAACO,MAAM;EAAA,IAAAC,QAAA;EAAA,OAAAC,mBAAA,GAAAC,IAAA,UAAAC,oBAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAAF,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAE,IAAA;QAErB,OAAMb,IAAI,CAACE,GAAG,CAACY,GAAG,gBAAAC,MAAA,CAAgBT,MAAM,CAACU,OAAO,CAACC,EAAE,kBAAe,CAAC;MAAA;QAA9EV,QAAQ,GAAAI,QAAA,CAAAO,IAAA;QAAAP,QAAA,CAAAE,IAAA;QAEd,OAAMZ,GAAG,CAACG,sBAAsB,CAACe,yBAAyB,CAACZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAAA;QAAAT,QAAA,CAAAE,IAAA;QAAA;MAAA;QAAAF,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAU,EAAA,GAAAV,QAAA;QAAAA,QAAA,CAAAE,IAAA;QAE1E,OAAMZ,GAAG,CAACI,YAAY,CAACiB,QAAQ,CAAC,gDAAgD,CAAC,CAAC;MAAA;MAAA;QAAA,OAAAX,QAAA,CAAAY,IAAA;IAAA;EAAA,GAAAC,OAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}