{"ast":null,"code":"import _regeneratorRuntime from \"/root/reactjs-gostack4-module4/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nvar _marked = /*#__PURE__*/_regeneratorRuntime().mark(getPlaylists);\nimport { call, put } from 'redux-saga/effects';\nimport api from '../../services/api';\nimport { Creators as PlaylistsActions } from '../ducks/playlists';\nimport { Creators as ErrorActions } from '../ducks/error';\nexport function getPlaylists() {\n  var response;\n  return _regeneratorRuntime().wrap(function getPlaylists$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.prev = 0;\n        _context.next = 3;\n        return call(api.get, '/playlists');\n      case 3:\n        response = _context.sent;\n        _context.next = 6;\n        return put(PlaylistsActions.getPlaylistsSuccess(response.data));\n      case 6:\n        _context.next = 12;\n        break;\n      case 8:\n        _context.prev = 8;\n        _context.t0 = _context[\"catch\"](0);\n        _context.next = 12;\n        return put(ErrorActions.setError('Não foi possível obter as playlists'));\n      case 12:\n      case \"end\":\n        return _context.stop();\n    }\n  }, _marked, null, [[0, 8]]);\n}","map":{"version":3,"names":["getPlaylists","call","put","api","Creators","PlaylistsActions","ErrorActions","response","_regeneratorRuntime","wrap","getPlaylists$","_context","prev","next","get","sent","getPlaylistsSuccess","data","t0","setError","stop","_marked"],"sources":["/root/reactjs-gostack4-module4/src/store/sagas/playlists.js"],"sourcesContent":["import { call, put } from 'redux-saga/effects';\nimport api from '../../services/api';\n\nimport { Creators as PlaylistsActions } from '../ducks/playlists';\nimport { Creators as ErrorActions } from '../ducks/error';\n\nexport function* getPlaylists() {\n  try {\n    const response = yield call(api.get, '/playlists');\n\n    yield put(PlaylistsActions.getPlaylistsSuccess(response.data));\n  } catch (err) {\n    yield put(ErrorActions.setError('Não foi possível obter as playlists'));\n  }\n}\n"],"mappings":";sDAMiBA,YAAY;AAN7B,SAASC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC9C,OAAOC,GAAG,MAAM,oBAAoB;AAEpC,SAASC,QAAQ,IAAIC,gBAAgB,QAAQ,oBAAoB;AACjE,SAASD,QAAQ,IAAIE,YAAY,QAAQ,gBAAgB;AAEzD,OAAO,SAAUN,YAAYA,CAAA;EAAA,IAAAO,QAAA;EAAA,OAAAC,mBAAA,GAAAC,IAAA,UAAAC,cAAAC,QAAA;IAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;MAAA;QAAAF,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAE,IAAA;QAER,OAAMZ,IAAI,CAACE,GAAG,CAACW,GAAG,EAAE,YAAY,CAAC;MAAA;QAA5CP,QAAQ,GAAAI,QAAA,CAAAI,IAAA;QAAAJ,QAAA,CAAAE,IAAA;QAEd,OAAMX,GAAG,CAACG,gBAAgB,CAACW,mBAAmB,CAACT,QAAQ,CAACU,IAAI,CAAC,CAAC;MAAA;QAAAN,QAAA,CAAAE,IAAA;QAAA;MAAA;QAAAF,QAAA,CAAAC,IAAA;QAAAD,QAAA,CAAAO,EAAA,GAAAP,QAAA;QAAAA,QAAA,CAAAE,IAAA;QAE9D,OAAMX,GAAG,CAACI,YAAY,CAACa,QAAQ,CAAC,qCAAqC,CAAC,CAAC;MAAA;MAAA;QAAA,OAAAR,QAAA,CAAAS,IAAA;IAAA;EAAA,GAAAC,OAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}